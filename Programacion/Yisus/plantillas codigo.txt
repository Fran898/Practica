FUNCIONES


String sql = "SELECT id,nombre,cantidad from productos where cantidad > ? ";
        Connection conn = AccesoBaseDatos.getInstance().getConn();
        try ( PreparedStatement ps = conn.prepareStatement(sql);) {

}


















TECLADO
	import java.time.DateTimeException;
	import java.time.LocalDate;
	import java.util.InputMismatchException;
	import java.util.Scanner;

	public static String string(String texto){
        System.out.print(texto);
        return new Scanner (System.in).nextLine();
    }
    
    public static int entero(String texto){
        System.out.print(texto);
        int aux=0;
        try{
            aux= new Scanner (System.in).nextInt();
        }catch(InputMismatchException a){
            System.out.println("No se ha introducido un entero");
        }
        
        return aux;
    }

    public static double doble(String texto){
        System.out.print(texto);
        double aux=0;
        try{
            aux= new Scanner (System.in).nextDouble();
        }catch(InputMismatchException a){
            System.out.println("No se ha introducido un numero");
        }
        return aux;
    }

    public static boolean boleano(String cadena){
        boolean sol=false,fin=false;
        Scanner teclado = new Scanner(System.in);
        String x;
        do{
        try{
            System.out.println(cadena);
            System.out.println("Si/No");
          x = teclado.nextLine();
        if (x.equalsIgnoreCase("Si") || x.equalsIgnoreCase("S") ){
            sol=true;
            fin=true;
        }else if(x.equalsIgnoreCase("No") || x.equalsIgnoreCase("N")){
            sol=false;
            fin=true;
        }else{
            throw new Exception();
        }  
        }catch(Exception e){
            System.out.println("Caracter no reconocido");
        }
        }while(!fin);
        return sol;
    }

    public static LocalDate fecha(String texto){
        System.out.print(texto);
        int dia = entero("Introduce el dia: ");
        int mes = entero("Introduce el mes: ");
        int anio = entero("Introduce el año: ");
        LocalDate aux=LocalDate.now();
        try{
            aux=LocalDate.of(dia,mes,anio);
        }catch(DateTimeException a){
            System.out.println("Los datos introducidos no son compatibles con el formato de fecha");
        }
        return aux;
    }
	
	
ESCLINEA

		import java.io.FileWriter;
		import java.io.IOException;
		import java.io.PrintWriter;

		FileWriter fw = null;
        PrintWriter pw = null;
        try {
            fw = new FileWriter("mifichero.txt");
            pw = new PrintWriter(fw);
            pw.println("texto a almacenar");

            pw.flush();
        } catch (IOException ex) {
            System.out.println("Fichero no encontrado");
        } finally {
            try {
                if (pw != null && fw != null) {
                    pw.close();
                    fw.close();
                }
            } catch (IOException ioe) {
                System.out.println("Error al cerrar");
            } catch (NullPointerException nulo){
                System.out.println("El flujo a cerrar es nulo");
            }

        }
		
LEELINEA

		import java.io.BufferedReader;
		import java.io.FileNotFoundException;
		import java.io.FileReader;
		import java.io.IOException;
		
		FileReader fr = null;
        BufferedReader br = null;
        String linea;
        try {
            fr = new FileReader("mifichero.txt");
            br = new BufferedReader(fr);
            while ((linea = br.readLine()) != null) {
                System.out.println(linea);
            }
        } catch (FileNotFoundException ex) {
            System.out.println(ex.getMessage());
        } catch (IOException ex) {
            System.out.println(ex.getMessage());
        } finally {
            try {
                if (fr != null && br != null) {
                    br.close();
                    fr.close();
                }
            } catch (IOException ex) {
                System.out.println("Error al cerrar");
            }
        }
	
ESCBYTE
		import java.io.FileOutputStream;
		import java.io.IOException;
		
		int c;
        FileOutputStream f = null;
        try {
            f = new FileOutputStream("mifichero.txt");
            while ((c = System.in.read()) != '*') {
                f.write((char) c);
            }
        } catch (IOException e) {
            System.out.println(e.toString());
        } finally {
            if (f != null) {
                try {
                    f.close();
                } catch (IOException ex) {

                }
            }
        }
		
LEEBYTE
		import java.io.FileInputStream;
		import java.io.IOException;
		
		int c;
        FileInputStream f = null;
        try {
            f = new FileInputStream("mifichero.txt");
            while ((c = f.read()) != -1) {
                System.out.print((char) c);
            }
        } catch (IOException e) {
            System.out.println(e.toString());
        } finally {
            if (f != null)
            try {
                f.close();
            } catch (IOException ex) {
                System.out.println("Error al cerrar el fichero.");
            }
        }
		
LEEBIN


	import java.io.DataInputStream;
	import java.io.EOFException;
	import java.io.File;
	import java.io.FileInputStream;
	import java.io.FileNotFoundException;
	import java.io.IOException;

	FileInputStream fi;
        DataInputStream di = null;
        boolean fin = false;
        String nombre, nacimiento;
        int edad;

        try {
            fi = new FileInputStream(f);
            di = new DataInputStream(fi);
            do {
                nombre = di.readUTF();
                nacimiento = di.readUTF();
                edad = di.readInt();
            } while (!fin);
        } catch (FileNotFoundException ex) {
            System.out.println(ex.getMessage());
        } catch (EOFException eofe) {
            fin = true;
        } catch (IOException ex) {
            System.out.println("Error de lectura del fichero");
        } finally{
            if (di != null){
                try{
                    di.close();
                } catch (IOException ex) {
                    System.out.println("Error al cerrar el fichero");
                }
            }
        }


ESCBIN
	import java.io.FileOutputStream;
	import java.io.IOException;
	import java.io.File;
	import java.io.DataOutputStream;
	import java.io.BufferedOutputStream;
	
	String nombre;
        int edad;
        FileOutputStream fo = null;
        DataOutputStream dos = null;
        boolean resp;
        try {
            fo = new FileOutputStream(f);
            dos = new DataOutputStream(new BufferedOutputStream(fo));
            do {
                nombre = teclado.string("Introduce nombre: ");
                edad = teclado.entero("Introduce edad: ");
                //lo grabamos en el fichero
                dos.writeUTF(nombre);
                dos.writeInt(edad);
                resp = teclado.boleano("Otro registro: ");
            } while (resp);
        } catch (IOException ex) {
            System.out.println("error " + ex.toString());
        } finally {
            if (dos != null) 
            try {
                dos.close();
            } catch (IOException ex) {
                System.out.println("Error al cerrar el fichero.");
            }
        }


MOOS(MiObjectOutputStream)
	import java.io.IOException;
	import java.io.ObjectOutputStream;
	import java.io.OutputStream;
	extends ObjectOutputStream

	public MiObjectOutputStream(OutputStream out) throws IOException{
        	super(out);
    	}


    	protected MiObjectOutputStream() throws IOException, SecurityException{
        	super();
    	}

    
    	@Override
    	protected void writeStreamHeader() throws IOException{
    	}


ESCSER
	
	import java.io.File;
	import java.io.FileOutputStream;
	import java.io.IOException;
	import java.io.ObjectOutputStream;
	
	ObjectOutputStream fo = null;
        File f = new File("prueba.txt");
        try {
            if(f.exists()){
                fo=new MiObjectOutputStream(new FileOutputStream(f,true));
               
            }else{
                fo = new ObjectOutputStream(new FileOutputStream(f));
            }

            fo.writeObject();
        } catch (IOException ex) {
            System.err.println(ex.toString());
        } finally {
            if (fo != null) {
                try {
                    fo.close();
                } catch (IOException ex) {
                    System.out.println("Error de lectura");
                }
            }
        }


LEESER
	import java.io.EOFException;
	import java.io.File;
	import java.io.FileInputStream;
	import java.io.FileNotFoundException;
	import java.io.IOException;
	import java.io.ObjectInputStream;

	ObjectInputStream os = null;
        try {
            os = new ObjectInputStream(new FileInputStream(f));
            Coche c;
            while (true) {
                c = (Coche) os.readObject();//Casting necesario 
                System.out.println(c.toString());
            }
        } catch (EOFException e) {
            System.out.println("Se alcanzó el final");
        } catch (ClassNotFoundException e) {
            System.out.println("Error el tipo de objeto no es compatible");
        } catch (FileNotFoundException e) {
            System.out.println("No se encontró el archivo");
        } catch (IOException e) {
            System.out.println("Error " + e.getMessage());
        } finally {
            if (os != null) {
                try {
                    os.close();
                } catch (IOException ex) {
                    System.out.println("Error al cerrar");
                }
            }
        }

MENU
	
	boolean salir=false;
        int opc = 0;
        
        do{
            System.out.println("1. ");
            System.out.println("2. ");
            System.out.println("3. ");
            System.out.println("4. ");
            opc = teclado.entero("Introduce la opcion: ");

            switch (opc) {
                case 1 -> {

                }

                case 2 -> {

                }

                case 3 -> {

                }

                case 4 -> {
                    
                    salir=true;
                }

                default -> {
                    
                }
            }
        }while(!salir);
	



	
	
	



		
	